{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["C","_ref","children","style","react_default","a","createElement","className","T","_ref2","App_C","borderColor","S","_ref3","D","_ref4","U","_ref5","border","backgroundSize","backgroundImage","concat","K","_ref6","N","App","App_T","App_S","App_D","App_U","App_K","App_N","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNAGMA,SAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,MAAb,OAAyBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IAAIJ,MAAOA,GAC3DC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,KAAKL,MAGhBM,EAAI,SAAAC,GAAA,IAAGP,EAAHO,EAAGP,SAAH,OAAkBE,EAAAC,EAAAC,cAACI,EAAD,CAAGP,MAAO,CAAEQ,YAAa,UAAYT,IAC3DU,EAAI,SAAAC,GAAA,IAAGX,EAAHW,EAAGX,SAAH,OAAkBE,EAAAC,EAAAC,cAACI,EAAD,CAAGP,MAAO,CAAEQ,YAAa,WAAaT,IAC5DY,EAAI,SAAAC,GAAA,IAAGb,EAAHa,EAAGb,SAAH,OAAkBE,EAAAC,EAAAC,cAACI,EAAD,CAAGP,MAAO,CAAEQ,YAAa,SAAWT,IAC1Dc,EAAI,SAAAC,GAAA,IAAGf,EAAHe,EAAGf,SAAH,OAAkBE,EAAAC,EAAAC,cAACI,EAAD,CAAGP,MAAO,CACpCe,OAAQ,OACRC,eAAgB,QAChBC,gBAAe,WAAAC,OAAanB,EAAb,SAEXoB,EAAI,SAAAC,GAAA,IAAGrB,EAAHqB,EAAGrB,SAAH,OAAkBE,EAAAC,EAAAC,cAACI,EAAD,CAAGP,MAAO,CAAEQ,YAAa,SAAWT,IAC1DsB,EAAI,kBAAMpB,EAAAC,EAAAC,cAACI,EAAD,CAAGP,MAAO,CAACe,OAAO,WA0BnBO,mLAbX,OAAOrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,KACpBH,EAAAC,EAAAC,cAACoB,EAAD,WADK,IACKtB,EAAAC,EAAAC,cAACoB,EAAD,WADL,IACetB,EAAAC,EAAAC,cAACqB,EAAD,WADf,IACyBvB,EAAAC,EAAAC,cAACsB,EAAD,YADzB,IACoCxB,EAAAC,EAAAC,cAACuB,EAAD,mBADpC,IACsDzB,EAAAC,EAAAC,cAACI,EAAD,YAC3DN,EAAAC,EAAAC,cAACoB,EAAD,WAFK,IAEKtB,EAAAC,EAAAC,cAACoB,EAAD,WAFL,IAEetB,EAAAC,EAAAC,cAACqB,EAAD,WAFf,IAEyBvB,EAAAC,EAAAC,cAACsB,EAAD,YAFzB,IAEoCxB,EAAAC,EAAAC,cAACuB,EAAD,mBAFpC,IAEsDzB,EAAAC,EAAAC,cAACI,EAAD,YAC3DN,EAAAC,EAAAC,cAACoB,EAAD,WAHK,IAGKtB,EAAAC,EAAAC,cAACoB,EAAD,WAHL,IAGetB,EAAAC,EAAAC,cAACqB,EAAD,WAHf,IAGyBvB,EAAAC,EAAAC,cAACsB,EAAD,YAHzB,IAGoCxB,EAAAC,EAAAC,cAACuB,EAAD,mBAHpC,IAGsDzB,EAAAC,EAAAC,cAACI,EAAD,YAC3DN,EAAAC,EAAAC,cAACoB,EAAD,WAJK,IAIKtB,EAAAC,EAAAC,cAACoB,EAAD,WAJL,IAIetB,EAAAC,EAAAC,cAACqB,EAAD,WAJf,IAIyBvB,EAAAC,EAAAC,cAACwB,EAAD,UAJzB,IAIkC1B,EAAAC,EAAAC,cAACwB,EAAD,UAJlC,IAI2C1B,EAAAC,EAAAC,cAACwB,EAAD,UAChD1B,EAAAC,EAAAC,cAACoB,EAAD,WALK,IAKKtB,EAAAC,EAAAC,cAACoB,EAAD,WALL,IAKetB,EAAAC,EAAAC,cAACqB,EAAD,WALf,IAKyBvB,EAAAC,EAAAC,cAACwB,EAAD,UALzB,IAKkC1B,EAAAC,EAAAC,cAACwB,EAAD,UALlC,IAK2C1B,EAAAC,EAAAC,cAACwB,EAAD,UAChD1B,EAAAC,EAAAC,cAACoB,EAAD,WANK,IAMKtB,EAAAC,EAAAC,cAACoB,EAAD,WANL,IAMetB,EAAAC,EAAAC,cAACqB,EAAD,WANf,IAMyBvB,EAAAC,EAAAC,cAACwB,EAAD,UANzB,IAMkC1B,EAAAC,EAAAC,cAACwB,EAAD,UANlC,IAM2C1B,EAAAC,EAAAC,cAACwB,EAAD,UAChD1B,EAAAC,EAAAC,cAACoB,EAAD,WAPK,IAOKtB,EAAAC,EAAAC,cAACyB,EAAD,MAPL,SAOe3B,EAAAC,EAAAC,cAACqB,EAAD,WAPf,IAOyBvB,EAAAC,EAAAC,cAACwB,EAAD,WAPzB,IAOmC1B,EAAAC,EAAAC,cAACwB,EAAD,UAPnC,IAO4C1B,EAAAC,EAAAC,cAACyB,EAAD,cAlBrCC,aCNEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.214e3b45.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst C = ({ children, style }) => <div className=\"c\" style={style}>\n  <div className=\"v\">{children}</div>\n</div>\n\nconst T = ({ children }) => <C style={{ borderColor: 'brown' }}>{children}</C>\nconst S = ({ children }) => <C style={{ borderColor: 'yellow' }}>{children}</C>\nconst D = ({ children }) => <C style={{ borderColor: 'pink' }}>{children}</C>\nconst U = ({ children }) => <C style={{\n  border: 'none',\n  backgroundSize: 'cover',\n  backgroundImage: `url(img/${children})`,\n}}></C>\nconst K = ({ children }) => <C style={{ borderColor: 'gray' }}>{children}</C>\nconst N = () => <C style={{border:'none'}}/>\n\nclass App extends Component {\n  render() {\n    const grid = [\n      [1, 2, 3, 4, 5, 6],\n      [1, 2, 3, 4, 5, 6],\n      [1, 2, 3, 4, 5, 6],\n      [1, 2, 3, 4, 5, 6],\n      [1, 2, 3, 4, 5, 6],\n      [1, 2, 3, 4, 5, 6],\n      [1, 2, 3, 4, 5, 6],\n    ]\n    return <div className=\"g\">\n      <T>-1</T> <T>-3</T> <S> 0</S> <D>1-4</D> <U>US-1st.png</U> <C>G/V</C>\n      <T>-2</T> <T>-1</T> <S>-1</S> <D>5-8</D> <U>US-1st.png</U> <C>G/V</C>\n      <T>-2</T> <T>+1</T> <S>+3</S> <D>> 8</D> <U>US-1st.png</U> <C>G/V</C>\n      <T>-1</T> <T>-2</T> <S>-2</S> <K>1</K> <K>2</K> <K>3</K>\n      <T>-2</T> <T> 0</T> <S>-1</S> <K>4</K> <K>6</K> <K>6</K>\n      <T>-2</T> <T>-2</T> <S> 0</S> <K>7</K> <K>8</K> <K>9</K>\n      <T>-3</T> <N/>      <S> 0</S> <K>10</K> <K>0</K> <N />\n\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}